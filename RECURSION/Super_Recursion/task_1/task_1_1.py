"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 45
Введите второе число: 56
Результат 45 + 56 = 101
Введите операцию (+, -, *, / или 0 для выхода): rth
Неверная операция. Повторите ввод
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ ЦИКЛ
"""

NUM_X = None
NUM_Y = None

while True:
	SIGN = input('Введите знак операции ("+", "-", "*", "/"), для выхода введите "0": ')
	if SIGN  == '0':
		print('До свидания!')
		break
	elif SIGN in ("+", "-", "*", "/"):
		try:
			NUM_X = float(input('Введите число X: '))
			NUM_Y = float(input('Введите число Y: '))
		except ValueError:
			print('Вы ввели строку вместо числа!')
			break
		
		if SIGN == '+':
			print(f'{NUM_X + NUM_Y}')
		elif SIGN == '-':
			print(f'{NUM_X - NUM_Y}')
		elif SIGN == '*':
			print(f'{NUM_X * NUM_Y}')
		elif SIGN == '/':
			try:
				print(f'{NUM_X / NUM_Y}')
			except ZeroDivisionError:
				print('Деление на ноль!')
	else:
		print('Непраильно введен знак операции!')
		
		
		