__author__ = 'Andrey.Speransky'

S = 'spam'
print(S)
print(S[-1] + " - Последний элемент в конце S")
print(S[-2] + " - Второй элемент с конца")
print(S[len(S) - 1] + " - Отрицательная индексация, более сложный способ")
print(S[1:3] + ' - Срез строки S начиная со смещения 1 и до 2 (не 3)')
print(S[1:] + ' - Все, кроме первого элемента (1:len(S))')
print(S[0:3] + ' - Все, кроме последнего элемента')
print(S[:3] + ' - То же, что и S[0:3]')
print(S[:-1] + ' - Еще раз все, кроме последнего элемента, но проще (0:-1)')
print(S[:] + ' - Все содержимое S, как обычная копия (0:len(S))')
print(S + 'XYZ' + '  - Конкатенация')
print(S * 8 + ' - Повторение \n')

# S[0] = 'z'  # Неизменяемые объекты нельзя изменить Python выдаст ошибку

S = 'z' + S[1:]  # Но с помощью выражений мы можем создавать новые объекты
print(S)
S.find('pa')  # Поиск смещения подстроки
print(S.find('pa'))
S.replace('pa', 'XYZ')  # Замена одной подстроки другой
print(S.replace('pa', 'XYZ'))

S = 'spam'
print(S.upper())  # Преобразование символов в верхний и в нижний регистр

line = 'aaa,bbb,ccccc,dd'

# Разбивает строку по разделителю и создает список строк
line = line.split(',')
print(line)

line = 'aaa,bbb,ccccc,dd\n'

# Удаляет завершающие пробельные символы
line = line.rstrip()
print(line)

print('%s, eggs, and %s' % ('spam', 'SPAM!'))  # Выражение (во всех версиях)

print('{0}, eggs, and {1}'.format('spam', 'SPAM!'))  # Метод (2.6, 3.0)
